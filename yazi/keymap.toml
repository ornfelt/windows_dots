# See:
# https://github.com/sxyazi/yazi/blob/main/yazi-config/preset/keymap-default.toml
# https://github.com/sxyazi/yazi/blob/shipped/yazi-config/preset/keymap-default.toml
# https://yazi-rs.github.io/features/
# https://yazi-rs.github.io/docs/tips/
# https://yazi-rs.github.io/docs/configuration/keymap/#manager.shell

#[manager]
#prepend_keymap = [
#    { on = [ "g", "e" ], run = "cd /etc", desc = "cd to /etc" },
#]

#[[manager.prepend_keymap]]
#on   = "S"
#run  = 'shell "$SHELL" --block --confirm'
#desc = "Open shell here"
[[manager.prepend_keymap]]
on = "S"
run = [ '''shell powershell --block --confirm''' ]
desc = "Open shell here"

[[manager.prepend_keymap]]
on = "<C-n>"
#run = [ '''shell --block --interactive''' ]
run = [ '''create --dir''' ]
desc = "Create new dir"

[[manager.prepend_keymap]]
on = "D"
run = [ '''delete''' ]
desc = "Delete file or directory"

# oil-like
[[manager.prepend_keymap]]
on = "o"
run = [ '''create''' ]
desc = "Create"

# ranger/lf-like
#[[manager.prepend_keymap]]
#on = "l"
#run = '''
#    shell --confirm 'if [ -d "$@" ]; then ya emit enter; elif [ -f "$@" ]; then ya emit open; else echo "Unknown item"; fi'
#'''
#desc = "Enter directory or open file"

#Get-Process -Name yazi
#$env:YAZI_ID = (Get-Process -Name yazi).Id
# This is not the correct id however, just use 0 to use the first one...
# ya emit-to 0 enter
# Also see:
# https://yazi-rs.github.io/docs/configuration/yazi/#opener
[[manager.prepend_keymap]]
on = "l"
#run = [ '''shell --confirm "powershell -Command ya emit-to 0 enter"''' ]
#run = [ '''shell --confirm "cmd /c ya emit-to 0 enter"''' ]
# Both of these work but cmd is faster...
#run = [ '''shell --confirm "powershell -Command if (Test-Path -PathType Leaf %*) { ya emit-to 0 open } else { ya emit-to 0 enter }"''' ]
run = [ '''shell --confirm "cmd /c \"if exist %0 ( if exist %0\\nul (ya emit-to 0 enter \"%0\") else (ya emit-to 0 open \"%0\") ) else (echo Unknown item: %0)\""''' ]
desc = "Enter directory or open file"

# Sorting
# ...

# Settings
# ...

# g-binds
[[manager.prepend_keymap]]
on = ["g", "e"]
run = [ '''cd /etc''' ]
desc = "cd to /etc"

[[manager.prepend_keymap]]
on = ["g", "h"]
run = [ '''cd ~''' ]
desc = "cd to /home/jonas"

[[manager.prepend_keymap]]
on = ["g", "u"]
run = [ '''cd $env:USERPROFILE''' ]
desc = "cd to /usr"

[[manager.prepend_keymap]]
on = ["g", "L"]
run = [ '''cd -r {{f}}''' ]
desc = "cd to selected file's directory"

[[manager.prepend_keymap]]
on = ["g", "M"]
run = [ '''cd /mnt''' ]
desc = "cd to /mnt"

#[[manager.prepend_keymap]]
#on = ["g", "r"]
#run = [ '''cd /''' ]
#desc = "cd to root"

[[manager.prepend_keymap]]
on = ["g", "?"]
run = [ '''cd /usr/share/doc/ranger''' ]
desc = "cd to ranger docs"

[[manager.prepend_keymap]]
on = ["g", "d"]
run = [ '''cd ~/Documents''' ]
desc = "cd to ~/Documents"

[[manager.prepend_keymap]]
on = ["g", "w"]
run = [ '''cd ~/Pictures/Wallpapers''' ]
desc = "cd to Wallpapers"

[[manager.prepend_keymap]]
on = ["g", "c"]
run = [ '''cd ~/Code''' ]
desc = "cd to ~/Code"

[[manager.prepend_keymap]]
on = ["g", "m"]
run = [ '''cd /media/data/Movies''' ]
desc = "cd to Movies"

[[manager.prepend_keymap]]
on = ["g", "."]
run = [ '''cd ~/.config''' ]
desc = "cd to ~/.config"

[[manager.prepend_keymap]]
on = ["g", "a"]
run = [ '''cd ~/Downloads''' ]
desc = "cd to ~/Downloads"

[[manager.prepend_keymap]]
on = [ "g", "r" ]
run = '''
	shell 'ya emit cd "$(git rev-parse --show-toplevel)"'
'''
desc = "cd to git root dir"

[[manager.prepend_keymap]]
on = ["g", "f"]
#run = [ '''shell 'wezterm cli split-pane --right --percent 50 -- powershell -Command vim %*' --confirm''' ]
run = [ ''' shell 'wezterm cli split-pane --right --percent 50 -- powershell -NoExit -Command "vim %*"' --confirm ''' ]
desc = "Open file in vim inside a new wezterm split"

[[manager.prepend_keymap]]
on = ["g", "x"]
run = [
'''
    shell 'firefox "%*"' --confirm 
'''
]
desc = "Open file in firefox"

# Fuzzy search
#[[manager.prepend_keymap]]
#on = "Ctrl-f"
#run = [ '''fzf_search''' ]
#desc = "Search files"
#
#[[manager.prepend_keymap]]
#on = "Ctrl-g"
#run = [ '''fzf_search_dirs''' ]
#desc = "Search directories"

# Default Z key can also be used instead of this
[[manager.prepend_keymap]]
on = "<C-f>"
run = [ '''plugin fzf''' ]
desc = "Jump to a file/directory via fzf"

# Rename
[[manager.prepend_keymap]]
on = ["c", "w"]
run = [ '''rename''' ]
desc = "Rename"

# Tagging / marking
#[[manager.prepend_keymap]]
#on = ["m", "c"]
#run = [
#    '''
#    shell 'echo "$PWD" > /tmp/yazi_marked_dir' --confirm
#    '''
#]
#desc = "Mark current dir"
#
## Try in shell:
## marked_dir=$(cat /tmp/yazi_marked_dir 2>/dev/null) && [ -d "$marked_dir" ] && cd "$marked_dir" || echo "No valid marked directory"
## This also works (maybe redundant though):
##shell 'marked_dir=$(cat /tmp/yazi_marked_dir 2>/dev/null) && [ -d "$marked_dir" ] && ya emit cd "$marked_dir" || echo "No valid marked directory"' --confirm
#[[manager.prepend_keymap]]
#on = ["'", "c"]
#run = '''
#    shell 'ya emit cd "$(cat /tmp/yazi_marked_dir 2>/dev/null)"' --confirm
#'''
#desc = "Go back to marked dir"

# Use bookmark plugin instead of above:
# https://github.com/dedukun/bookmarks.yazi
# Add the plugin
#ya pack -a dedukun/bookmarks
# Install the plugin
#ya pack -i
# Upgrade the plugin
#ya pack -u
[[manager.prepend_keymap]]
on = [ "m" ]
run = "plugin bookmarks --args=save"
desc = "Save current position as a bookmark"

[[manager.prepend_keymap]]
on = [ "'" ]
run = "plugin bookmarks --args=jump"
desc = "Jump to a bookmark"

[[manager.prepend_keymap]]
on = [ "b", "d" ]
run = "plugin bookmarks --args=delete"
desc = "Delete a bookmark"

[[manager.prepend_keymap]]
on = [ "b", "D" ]
run = "plugin bookmarks --args=delete_all"
desc = "Delete all bookmarks"

# Custom
# ...

# TODO?
# Image commands
#[[manager.prepend_keymap]]
#on = ["b", "g"]
#run = [
#'''
#    shell 'feh --bg-scale "$0"' --confirm 
#'''
#]
#desc = "Set current image as background"

# Copy path
[[manager.prepend_keymap]]
on = [" ", "-"]
run = [ '''
    shell --confirm "powershell -Command \"& 'C:/Users/jonas/OneDrive/Documents/WindowsPowerShell/my_scripts/copy_path.ps1' '%*'\""
''' ]
desc = "Copy selection to clipboard"

[[manager.prepend_keymap]]
on = [" ", "_"]
run = [ '''
    shell --confirm "powershell -Command \"& 'C:/Users/jonas/OneDrive/Documents/WindowsPowerShell/my_scripts/copy_path.ps1' '%*' 1\""
''' ]
desc = "Copy selection to clipboard"

